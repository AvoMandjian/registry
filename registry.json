{
  "servers": [
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.aliengiraffe/spotdb",
        "description": "Ephemeral data sandbox for AI workflows with guardrails and security",
        "repository": {
          "url": "https://github.com/aliengiraffe/spotdb",
          "source": "github"
        },
        "version": "0.1.0",
        "packages": [
          {
            "registryType": "oci",
            "identifier": "docker.io/aliengiraffe/spotdb:0.1.0",
            "transport": {
              "type": "stdio"
            },
            "environmentVariables": [
              {
                "description": "Optional API key for request authentication",
                "format": "string",
                "isSecret": true,
                "name": "X-API-Key"
              }
            ]
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-10-09T17:05:17.793149Z",
          "updatedAt": "2025-10-09T17:05:17.793149Z",
          "isLatest": true
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.alpic.test/test-mcp-server",
        "description": "Alpic Test MCP Server - great server!",
        "repository": {},
        "version": "0.0.1",
        "remotes": [
          {
            "type": "streamable-http",
            "url": "https://test.alpic.ai/"
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-10T13:57:43.256739Z",
          "updatedAt": "2025-09-10T13:57:43.256739Z",
          "isLatest": true
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-10-17/server.schema.json",
        "name": "ai.exa/exa",
        "description": "Fast, intelligent web search and web crawling.\n\nNew mcp tool: Exa-code is a context tool for coding ",
        "repository": {
          "url": "https://github.com/exa-labs/exa-mcp-server",
          "source": "github"
        },
        "version": "3.0.7",
        "remotes": [
          {
            "type": "streamable-http",
            "url": "https://mcp.exa.ai/mcp"
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-10-30T10:19:26.892476Z",
          "updatedAt": "2025-10-30T10:19:26.892476Z",
          "isLatest": true
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.explorium/mcp-explorium",
        "description": "Access live company and contact data from Explorium's AgentSource B2B platform.",
        "repository": {},
        "version": "1.0.0",
        "remotes": [
          {
            "type": "sse",
            "url": "https://mcp-github-registry.explorium.ai/sse"
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-16T21:06:15.352229Z",
          "updatedAt": "2025-09-16T21:06:15.352229Z",
          "isLatest": true
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.gomarble/mcp-api",
        "description": "GoMarble MCP API Server",
        "repository": {},
        "version": "1.0.0",
        "remotes": [
          {
            "type": "sse",
            "url": "https://apps.gomarble.ai/mcp-api/sse"
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-10-14T05:56:54.505554Z",
          "updatedAt": "2025-10-14T05:56:54.505554Z",
          "isLatest": true
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.klavis/strata",
        "description": "MCP server for progressive tool usage at any scale (see https://klavis.ai)",
        "repository": {
          "url": "https://github.com/Klavis-AI/klavis",
          "source": "github"
        },
        "version": "1.0.0",
        "remotes": [
          {
            "type": "streamable-http",
            "url": "https://strata.klavis.ai/mcp/"
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-28T19:13:44.307076Z",
          "updatedAt": "2025-09-28T19:13:44.307076Z",
          "isLatest": true
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.mcpanalytics/analytics",
        "description": "ML statistical analysis platform for data teams",
        "repository": {},
        "version": "1.0.0",
        "remotes": [
          {
            "type": "streamable-http",
            "url": "https://api.mcpanalytics.ai/auth0"
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-17T02:35:06.675809Z",
          "updatedAt": "2025-09-17T02:38:18.073872Z",
          "isLatest": false
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.mcpanalytics/analytics",
        "description": "MCP Analytics, searchable tools and reports with interactive HTML visualization",
        "repository": {},
        "version": "1.0.1",
        "remotes": [
          {
            "type": "streamable-http",
            "url": "https://api.mcpanalytics.ai/auth0"
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-17T02:38:18.067163Z",
          "updatedAt": "2025-09-17T03:00:38.27521Z",
          "isLatest": false
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.mcpanalytics/analytics",
        "description": "MCP Analytics, searchable tools and reports with interactive HTML visualization",
        "repository": {
          "url": "https://github.com/embeddedlayers/mcp-analytics",
          "source": "github"
        },
        "version": "1.0.2",
        "remotes": [
          {
            "type": "streamable-http",
            "url": "https://api.mcpanalytics.ai/auth0"
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-17T03:00:38.248012Z",
          "updatedAt": "2025-09-17T03:17:49.632449Z",
          "isLatest": false
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.mcpanalytics/analytics",
        "description": "MCP Analytics, searchable tools and reports with interactive HTML visualization",
        "repository": {
          "url": "https://github.com/embeddedlayers/mcp-analytics",
          "source": "github"
        },
        "version": "1.0.3",
        "remotes": [
          {
            "type": "streamable-http",
            "url": "https://api.mcpanalytics.ai/auth0"
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-17T03:17:49.595346Z",
          "updatedAt": "2025-09-17T03:17:49.595346Z",
          "isLatest": true
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.mcpcap/mcpcap",
        "description": "An MCP server for analyzing PCAP files.",
        "repository": {
          "url": "https://github.com/mcpcap/mcpcap",
          "source": "github"
        },
        "version": "0.4.3",
        "packages": [
          {
            "registryType": "pypi",
            "registryBaseUrl": "https://pypi.org",
            "identifier": "mcpcap",
            "version": "0.4.3",
            "transport": {
              "type": "stdio"
            }
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-11T01:00:19.713725Z",
          "updatedAt": "2025-09-11T01:06:15.729223Z",
          "isLatest": false
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.mcpcap/mcpcap",
        "description": "An MCP server for analyzing PCAP files.",
        "repository": {
          "url": "https://github.com/mcpcap/mcpcap",
          "source": "github"
        },
        "version": "0.4.4",
        "packages": [
          {
            "registryType": "pypi",
            "registryBaseUrl": "https://pypi.org",
            "identifier": "mcpcap",
            "version": "0.4.4",
            "transport": {
              "type": "stdio"
            }
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-11T01:06:15.722886Z",
          "updatedAt": "2025-09-12T01:41:27.484537Z",
          "isLatest": false
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.mcpcap/mcpcap",
        "description": "An MCP server for analyzing PCAP files.",
        "repository": {
          "url": "https://github.com/mcpcap/mcpcap",
          "source": "github"
        },
        "version": "0.5.10",
        "packages": [
          {
            "registryType": "pypi",
            "registryBaseUrl": "https://pypi.org",
            "identifier": "mcpcap",
            "version": "0.4.4",
            "transport": {
              "type": "stdio"
            }
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-12T05:10:59.806509Z",
          "updatedAt": "2025-09-18T00:54:49.018201Z",
          "isLatest": false
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.mcpcap/mcpcap",
        "description": "An MCP server for analyzing PCAP files.",
        "repository": {
          "url": "https://github.com/mcpcap/mcpcap",
          "source": "github"
        },
        "version": "0.5.2",
        "packages": [
          {
            "registryType": "pypi",
            "registryBaseUrl": "https://pypi.org",
            "identifier": "mcpcap",
            "version": "0.4.4",
            "transport": {
              "type": "stdio"
            }
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-12T01:41:27.474865Z",
          "updatedAt": "2025-09-12T01:50:59.068605Z",
          "isLatest": false
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.mcpcap/mcpcap",
        "description": "An MCP server for analyzing PCAP files.",
        "repository": {
          "url": "https://github.com/mcpcap/mcpcap",
          "source": "github"
        },
        "version": "0.5.3",
        "packages": [
          {
            "registryType": "pypi",
            "registryBaseUrl": "https://pypi.org",
            "identifier": "mcpcap",
            "version": "0.4.4",
            "transport": {
              "type": "stdio"
            }
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-12T01:50:59.054897Z",
          "updatedAt": "2025-09-12T01:53:51.978639Z",
          "isLatest": false
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.mcpcap/mcpcap",
        "description": "An MCP server for analyzing PCAP files.",
        "repository": {
          "url": "https://github.com/mcpcap/mcpcap",
          "source": "github"
        },
        "version": "0.5.4",
        "packages": [
          {
            "registryType": "pypi",
            "registryBaseUrl": "https://pypi.org",
            "identifier": "mcpcap",
            "version": "0.4.4",
            "transport": {
              "type": "stdio"
            }
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-12T01:53:51.972295Z",
          "updatedAt": "2025-09-12T01:55:40.789432Z",
          "isLatest": false
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.mcpcap/mcpcap",
        "description": "An MCP server for analyzing PCAP files.",
        "repository": {
          "url": "https://github.com/mcpcap/mcpcap",
          "source": "github"
        },
        "version": "0.5.5",
        "packages": [
          {
            "registryType": "pypi",
            "registryBaseUrl": "https://pypi.org",
            "identifier": "mcpcap",
            "version": "0.4.4",
            "transport": {
              "type": "stdio"
            }
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-12T01:55:40.782814Z",
          "updatedAt": "2025-09-12T02:03:43.967161Z",
          "isLatest": false
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.mcpcap/mcpcap",
        "description": "An MCP server for analyzing PCAP files.",
        "repository": {
          "url": "https://github.com/mcpcap/mcpcap",
          "source": "github"
        },
        "version": "0.5.6",
        "packages": [
          {
            "registryType": "pypi",
            "registryBaseUrl": "https://pypi.org",
            "identifier": "mcpcap",
            "version": "0.4.4",
            "transport": {
              "type": "stdio"
            }
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-12T02:03:43.941695Z",
          "updatedAt": "2025-09-12T04:24:04.029498Z",
          "isLatest": false
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.mcpcap/mcpcap",
        "description": "An MCP server for analyzing PCAP files.",
        "repository": {
          "url": "https://github.com/mcpcap/mcpcap",
          "source": "github"
        },
        "version": "0.5.7",
        "packages": [
          {
            "registryType": "pypi",
            "registryBaseUrl": "https://pypi.org",
            "identifier": "mcpcap",
            "version": "0.4.4",
            "transport": {
              "type": "stdio"
            }
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-12T04:24:04.024828Z",
          "updatedAt": "2025-09-12T04:28:40.563658Z",
          "isLatest": false
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.mcpcap/mcpcap",
        "description": "An MCP server for analyzing PCAP files.",
        "repository": {
          "url": "https://github.com/mcpcap/mcpcap",
          "source": "github"
        },
        "version": "0.5.8",
        "packages": [
          {
            "registryType": "pypi",
            "registryBaseUrl": "https://pypi.org",
            "identifier": "mcpcap",
            "version": "0.4.4",
            "transport": {
              "type": "stdio"
            }
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-12T04:28:40.558477Z",
          "updatedAt": "2025-09-12T04:48:10.705163Z",
          "isLatest": false
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.mcpcap/mcpcap",
        "description": "An MCP server for analyzing PCAP files.",
        "repository": {
          "url": "https://github.com/mcpcap/mcpcap",
          "source": "github"
        },
        "version": "0.5.9",
        "packages": [
          {
            "registryType": "pypi",
            "registryBaseUrl": "https://pypi.org",
            "identifier": "mcpcap",
            "version": "0.4.4",
            "transport": {
              "type": "stdio"
            }
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-12T04:48:10.687272Z",
          "updatedAt": "2025-09-12T05:10:59.819864Z",
          "isLatest": false
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.mcpcap/mcpcap",
        "description": "An MCP server for analyzing PCAP files.",
        "repository": {
          "url": "https://github.com/mcpcap/mcpcap",
          "source": "github"
        },
        "version": "0.6.0",
        "packages": [
          {
            "registryType": "pypi",
            "registryBaseUrl": "https://pypi.org",
            "identifier": "mcpcap",
            "version": "0.4.4",
            "transport": {
              "type": "stdio"
            }
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-18T00:54:48.998145Z",
          "updatedAt": "2025-09-18T00:54:48.998145Z",
          "isLatest": true
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.meminal/meminal",
        "description": "Memory for deep conversational context across any platform",
        "repository": {},
        "version": "1.0.0",
        "remotes": [
          {
            "type": "streamable-http",
            "url": "https://meminal.ai/mcp",
            "headers": [
              {
                "description": "Bearer token for authentication (OAuth or Personal Access Token)",
                "isSecret": true,
                "name": "Authorization"
              }
            ]
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-10-12T23:40:10.473855Z",
          "updatedAt": "2025-10-12T23:40:10.473855Z",
          "isLatest": true
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.shawndurrani/mcp-merchant",
        "description": "Search-only commerce MCP server backed by Stripe (test)",
        "repository": {},
        "version": "0.1.0",
        "packages": [
          {
            "registryType": "npm",
            "registryBaseUrl": "https://registry.npmjs.org",
            "identifier": "mcp-merchant",
            "version": "0.1.0",
            "runtimeHint": "npx",
            "transport": {
              "type": "stdio"
            },
            "environmentVariables": [
              {
                "description": "Stripe secret key (test mode)",
                "isRequired": true,
                "isSecret": true,
                "name": "STRIPE_SECRET_KEY"
              },
              {
                "description": "Max products to cache",
                "default": "100",
                "name": "PRODUCT_LIMIT"
              },
              {
                "description": "Catalog refresh interval in seconds",
                "default": "600",
                "name": "REFRESH_INTERVAL_SEC"
              }
            ]
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-09T10:36:46.54185Z",
          "updatedAt": "2025-09-14T02:22:00.597355Z",
          "isLatest": false
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.shawndurrani/mcp-merchant",
        "description": "Search-only commerce MCP server backed by Stripe (test)",
        "repository": {},
        "version": "0.1.1",
        "packages": [
          {
            "registryType": "npm",
            "registryBaseUrl": "https://registry.npmjs.org",
            "identifier": "mcp-merchant",
            "version": "0.1.1",
            "runtimeHint": "npx",
            "transport": {
              "type": "stdio"
            },
            "environmentVariables": [
              {
                "description": "Stripe secret key (test mode)",
                "isRequired": true,
                "isSecret": true,
                "name": "STRIPE_SECRET_KEY"
              },
              {
                "description": "Max products to cache",
                "default": "100",
                "name": "PRODUCT_LIMIT"
              },
              {
                "description": "Catalog refresh interval in seconds",
                "default": "600",
                "name": "REFRESH_INTERVAL_SEC"
              }
            ]
          }
        ],
        "remotes": [
          {
            "type": "sse",
            "url": "https://mcp.shawndurrani.ai/sse"
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-14T02:22:00.475571Z",
          "updatedAt": "2025-09-16T22:54:28.465114Z",
          "isLatest": false
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.shawndurrani/mcp-merchant",
        "description": "Search-only commerce MCP server backed by Stripe (test)",
        "repository": {},
        "version": "0.1.3",
        "packages": [
          {
            "registryType": "npm",
            "registryBaseUrl": "https://registry.npmjs.org",
            "identifier": "mcp-merchant",
            "version": "0.1.3",
            "runtimeHint": "npx",
            "transport": {
              "type": "stdio"
            },
            "environmentVariables": [
              {
                "description": "Stripe secret key (test mode)",
                "isRequired": true,
                "isSecret": true,
                "name": "STRIPE_SECRET_KEY"
              },
              {
                "description": "Max products to cache",
                "default": "100",
                "name": "PRODUCT_LIMIT"
              },
              {
                "description": "Catalog refresh interval in seconds",
                "default": "600",
                "name": "REFRESH_INTERVAL_SEC"
              }
            ]
          }
        ],
        "remotes": [
          {
            "type": "sse",
            "url": "https://mcp.shawndurrani.ai/sse"
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-16T22:54:28.454307Z",
          "updatedAt": "2025-09-16T22:54:28.454307Z",
          "isLatest": true
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.shawndurrani/mcp-registry",
        "description": "Search the public MCP Registry; discover servers and copy SSE URLs.",
        "repository": {},
        "version": "0.1.0",
        "remotes": [
          {
            "type": "sse",
            "url": "https://mcp-registry.shawndurrani.ai/sse"
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-15T03:11:16.637454Z",
          "updatedAt": "2025-09-15T04:01:11.068068Z",
          "isLatest": false
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.shawndurrani/mcp-registry",
        "description": "Search the public MCP Registry; discover servers and copy SSE URLs.",
        "repository": {},
        "version": "0.1.1",
        "remotes": [
          {
            "type": "sse",
            "url": "https://mcp-registry.shawndurrani.ai/sse"
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-15T04:01:11.057921Z",
          "updatedAt": "2025-09-15T04:20:53.740529Z",
          "isLatest": false
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.shawndurrani/mcp-registry",
        "description": "Search the public MCP Registry; discover servers and copy SSE URLs.",
        "repository": {},
        "version": "0.1.2",
        "remotes": [
          {
            "type": "sse",
            "url": "https://mcp-registry.shawndurrani.ai/sse"
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-15T04:20:53.726246Z",
          "updatedAt": "2025-09-16T23:02:09.747666Z",
          "isLatest": false
        }
      }
    },
    {
      "server": {
        "$schema": "https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json",
        "name": "ai.shawndurrani/mcp-registry",
        "description": "Search the public MCP Registry; discover servers and copy SSE URLs.",
        "repository": {},
        "version": "0.1.3",
        "remotes": [
          {
            "type": "sse",
            "url": "https://mcp-registry.shawndurrani.ai/sse"
          }
        ]
      },
      "_meta": {
        "io.modelcontextprotocol.registry/official": {
          "status": "active",
          "publishedAt": "2025-09-16T23:02:09.738662Z",
          "updatedAt": "2025-09-16T23:02:09.738662Z",
          "isLatest": true
        }
      }
    }
  ],
  "metadata": {
    "nextCursor": "ai.shawndurrani/mcp-registry:0.1.3",
    "count": 30
  }
}